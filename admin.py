from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext
import yaml
import redis

# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥–∞
with open('config.yaml') as f:
    config = yaml.safe_load(f)

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Redis
r = redis.Redis(
    host=config['redis']['host'],
    port=config['redis']['port'],
    decode_responses=True
)

def admin_start(update: Update, context: CallbackContext):
    """–ö–æ–º–∞–Ω–¥–∞ /admin –¥–ª—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏"""
    if update.message.from_user.id != config['admin_id']:
        update.message.reply_text("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω!")
        return
    
    keyboard = [
        ["üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏"],
        ["üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å", "üßπ –û—á–∏—Å—Ç–∫–∞"]
    ]
    
    update.message.reply_text(
        "‚öôÔ∏è *–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å Coffee Coma VPN*",
        reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True),
        parse_mode='Markdown'
    )

def handle_admin_command(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏"""
    if update.message.from_user.id != config['admin_id']:
        return
    
    text = update.message.text
    
    if text == "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞":
        total_users = len(r.keys("user:*"))
        active_users = len([key for key in r.keys("user:*") if r.hget(key, 'active') == 'true'])
        
        update.message.reply_text(
            f"üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã*\n\n"
            f"üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total_users}\n"
            f"‚úÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫: {active_users}\n"
            f"üéÅ –ü—Ä–æ–±–Ω—ã—Ö –ø–µ—Ä–∏–æ–¥–æ–≤: {len([key for key in r.keys('user:*') if r.hget(key, 'is_trial') == 'True'])}",
            parse_mode='Markdown'
        )
    
    elif text == "üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏":
        users = []
        for key in r.keys("user:*"):
            user_data = r.hgetall(key)
            user_id = key.split(':')[1]
            users.append(f"ID: {user_id}, –ê–∫—Ç–∏–≤–µ–Ω: {user_data.get('active', '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö')}")
        
        update.message.reply_text(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:\n" + "\n".join(users[:10]))

def main():
    updater = Updater(config['tokens']['admin'])
    dp = updater.dispatcher
    
    dp.add_handler(CommandHandler('admin', admin_start))
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, handle_admin_command))
    
    print("–ê–¥–º–∏–Ω-–±–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()