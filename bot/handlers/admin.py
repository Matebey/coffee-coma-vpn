from aiogram import Dispatcher, types
from aiogram.dispatcher import FSMContext
from aiogram.types import Message, CallbackQuery

from bot.utils.config import Config
from bot.database.models import User, Payment, VPNConfig
from bot.keyboards.admin import get_admin_keyboard

async def admin_command(message: Message):
    """–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    if message.from_user.id != Config.ADMIN_ID:
        await message.answer("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω")
        return
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    total_users = await User.query.gino.count()
    total_payments = await Payment.query.gino.count()
    active_vpns = await VPNConfig.query.where(
        VPNConfig.is_active == True
    ).gino.count()
    
    await message.answer(
        f"üëë <b>–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å</b>\n\n"
        f"üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total_users}\n"
        f"üí≥ –ü–ª–∞—Ç–µ–∂–µ–π: {total_payments}\n"
        f"üîó –ê–∫—Ç–∏–≤–Ω—ã—Ö VPN: {active_vpns}\n\n"
        "‚ö° <b>–î–µ–π—Å—Ç–≤–∏—è:</b>",
        reply_markup=get_admin_keyboard(),
        parse_mode=types.ParseMode.HTML
    )

async def admin_stats(callback: CallbackQuery):
    """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"""
    total_users = await User.query.gino.count()
    total_payments = await Payment.query.gino.count()
    total_earned = await db.select([db.func.sum(Payment.amount)]).where(
        Payment.status == 'succeeded'
    ).gino.scalar() or 0
    
    await callback.message.answer(
        f"üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b>\n\n"
        f"üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total_users}\n"
        f"üí≥ –ü–ª–∞—Ç–µ–∂–µ–π: {total_payments}\n"
        f"üí∞ –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: {total_earned} —Ä—É–±.\n"
        f"üîó –ê–∫—Ç–∏–≤–Ω—ã—Ö VPN: {await VPNConfig.query.where(VPNConfig.is_active == True).gino.count()}",
        parse_mode=types.ParseMode.HTML
    )

def register_admin_handlers(dp: Dispatcher):
    dp.register_message_handler(admin_command, commands=['admin'])
    dp.register_callback_query_handler(admin_stats, lambda c: c.data == 'admin_stats')
