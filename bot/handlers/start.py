from aiogram import Dispatcher, types
from aiogram.dispatcher import FSMContext
from aiogram.types import Message, ReplyKeyboardRemove

from bot.database.models import User, Referral
from bot.keyboards.main import get_main_keyboard

async def start_command(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start"""
    user_id = message.from_user.id
    user = await User.get(user_id)
    
    if not user:
        # –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        user = await User.create(
            id=user_id,
            username=message.from_user.username,
            first_name=message.from_user.first_name,
            last_name=message.from_user.last_name
        )
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏
        if len(message.text.split()) > 1:
            ref_code = message.text.split()[1]
            if ref_code.startswith('ref'):
                try:
                    referrer_id = int(ref_code[3:])
                    await Referral.create(
                        referrer_id=referrer_id,
                        referred_id=user_id
                    )
                except ValueError:
                    pass
    
    await message.answer(
        f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {message.from_user.first_name}!\n\n"
        "üöÄ –≠—Ç–æ VPN –±–æ—Ç –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –∏ –∞–Ω–æ–Ω–∏–º–Ω–æ–≥–æ —Å–µ—Ä—Ñ–∏–Ω–≥–∞ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ.\n\n"
        "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "‚Ä¢ /buy - –ö—É–ø–∏—Ç—å VPN\n"
        "‚Ä¢ /my - –ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏\n"
        "‚Ä¢ /referral - –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞\n"
        "‚Ä¢ /help - –ü–æ–º–æ—â—å",
        reply_markup=get_main_keyboard(),
        parse_mode=types.ParseMode.HTML
    )

async def help_command(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help"""
    await message.answer(
        "ü§ñ <b>VPN Bot Help</b>\n\n"
        "üîê <b>–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:</b>\n"
        "1. –ö—É–ø–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É –∫–æ–º–∞–Ω–¥–æ–π /buy\n"
        "2. –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –ø–æ–ª—É—á–∏—Ç–µ –∫–æ–Ω—Ñ–∏–≥ —Ñ–∞–π–ª\n"
        "3. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ OpenVPN –∫–ª–∏–µ–Ω—Ç\n"
        "4. –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –∫–æ–Ω—Ñ–∏–≥ —Ñ–∞–π–ª\n"
        "5. –ü–æ–¥–∫–ª—é—á–∞–π—Ç–µ—Å—å –∫ VPN!\n\n"
        "üí≥ <b>–û–ø–ª–∞—Ç–∞:</b> –ü—Ä–∏–Ω–∏–º–∞–µ–º –∫–∞—Ä—Ç—ã, –∫—Ä–∏–ø—Ç—É\n"
        "üë• <b>–†–µ—Ñ–µ—Ä–∞–ª—ã:</b> –ü–æ–ª—É—á–∞–π—Ç–µ 10% —Å –ø–æ–∫—É–ø–æ–∫\n\n"
        "üìû <b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞:</b> @your_support",
        parse_mode=types.ParseMode.HTML
    )

def register_start_handlers(dp: Dispatcher):
    dp.register_message_handler(start_command, commands=['start'])
    dp.register_message_handler(help_command, commands=['help'])
