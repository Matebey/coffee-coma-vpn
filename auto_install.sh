#!/bin/bash

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ VPN –±–æ—Ç–∞
echo "=== –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ VPN –±–æ—Ç–∞ ==="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ root
if [ "$EUID" -ne 0 ]
  then echo "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –æ—Ç –∏–º–µ–Ω–∏ root"
  exit
fi

# –í–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö
echo "–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:"
read -p "–í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –æ—Ç @BotFather: " BOT_TOKEN
read -p "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à Telegram ID: " TELEGRAM_ID
read -p "–í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω YooMoney (–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ Enter —á—Ç–æ–±—ã –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å): " YOOMONEY_TOKEN
read -p "–í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω CloudTips (–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ Enter —á—Ç–æ–±—ã –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å): " CLOUDTIPS_TOKEN

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
apt update
apt upgrade -y
apt install -y python3 python3-pip python3-venv git openvpn easy-rsa sqlite3

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ OpenVPN —á–µ—Ä–µ–∑ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç
echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ OpenVPN..."
wget https://git.io/vpn -O openvpn-install.sh
chmod +x openvpn-install.sh

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–∞ OpenVPN
echo "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ OpenVPN..."
export AUTO_INSTALL=y
export APPROVE_INSTALL=y
export APPROVE_IP=y
export IPV6_SUPPORT=n
export PORT_CHOICE=1
export PROTOCOL_CHOICE=1
export DNS=1
export COMPRESSION_ENABLED=n
export CUSTOMIZE_ENC=n
export CLIENT=client
export PASS=1

# –ó–∞–ø—É—Å–∫ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–∞ OpenVPN
./openvpn-install.sh << EOF
$IPV6_SUPPORT
$PORT_CHOICE
$PROTOCOL_CHOICE
$DNS
$COMPRESSION_ENABLED
$CUSTOMIZE_ENC
$CLIENT
$PASS
EOF

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ OpenVPN —Å–µ—Ä–≤–µ—Ä–∞
echo "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ OpenVPN —Å–µ—Ä–≤–µ—Ä–∞..."

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π
mkdir -p /etc/openvpn/easy-rsa/
cd /etc/openvpn/easy-rsa/

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è PKI
echo "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è PKI..."
easyrsa init-pki

# –°–æ–∑–¥–∞–Ω–∏–µ CA
echo "–°–æ–∑–¥–∞–Ω–∏–µ CA..."
easyrsa --batch build-ca nopass

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
echo "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞..."
easyrsa build-server-full server nopass

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è DH –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
echo "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è DH –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤..."
easyrsa gen-dh

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è TLS –∫–ª—é—á–∞
echo "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è TLS –∫–ª—é—á–∞..."
openvpn --genkey secret ta.key

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞
echo "–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞..."
cat > /etc/openvpn/server.conf << EOF
port 1194
proto udp
dev tun
ca /etc/openvpn/easy-rsa/pki/ca.crt
cert /etc/openvpn/easy-rsa/pki/issued/server.crt
key /etc/openvpn/easy-rsa/pki/private/server.key
dh /etc/openvpn/easy-rsa/pki/dh.pem
server 10.8.0.0 255.255.255.0
ifconfig-pool-persist /var/log/openvpn/ipp.txt
push "redirect-gateway def1 bypass-dhcp"
push "dhcp-option DNS 8.8.8.8"
push "dhcp-option DNS 8.8.4.4"
keepalive 10 120
tls-auth /etc/openvpn/easy-rsa/ta.key 0
cipher AES-256-CBC
persist-key
persist-tun
status /var/log/openvpn/openvpn-status.log
verb 3
explicit-exit-notify 1
EOF

# –í–∫–ª—é—á–µ–Ω–∏–µ IP forwarding
echo "–í–∫–ª—é—á–µ–Ω–∏–µ IP forwarding..."
echo 'net.ipv4.ip_forward=1' >> /etc/sysctl.conf
sysctl -p

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ firewall
echo "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ firewall..."
iptables -t nat -A POSTROUTING -s 10.8.0.0/24 -o eth0 -j MASQUERADE
iptables-save > /etc/iptables/rules.v4

# –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
echo "–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
python3 -m venv /opt/vpnbot/venv
source /opt/vpnbot/venv/bin/activate

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Å –æ–±—Ö–æ–¥–æ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –≤–µ—Ä—Å–∏–π
echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
pip install --upgrade pip
pip install python-telegram-bot==13.7 pyyaml==5.4.1

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –±–æ—Ç–∞
echo "–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –±–æ—Ç–∞..."
mkdir -p /opt/vpnbot/{config,db,scripts}

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
echo "–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–æ—Ç–∞..."
cat > /opt/vpnbot/config/config.yaml << EOF
bot:
  token: "$BOT_TOKEN"
  admin_id: $TELEGRAM_ID

payments:
  yoomoney:
    token: "$YOOMONEY_TOKEN"
    enabled: false
  cloudtips:
    token: "$CLOUDTIPS_TOKEN"
    enabled: false

vpn:
  server_ip: $(curl -s ifconfig.me)
  server_port: 1194
  config_path: "/etc/openvpn/client-configs"
  price: 100.0
  duration_days: 30

database:
  path: "/opt/vpnbot/db/vpn_bot.db"
EOF

# –°–æ–∑–¥–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞ –±–æ—Ç–∞
echo "–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –±–æ—Ç–∞..."
cat > /opt/vpnbot/vpn_bot.py << 'EOF'
#!/usr/bin/env python3
import logging
import sqlite3
import yaml
from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes, ConversationHandler

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
with open('/opt/vpnbot/config/config.yaml', 'r') as f:
    config = yaml.safe_load(f)

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è ConversationHandler
SELECTING_ACTION, PROCESSING_PAYMENT = range(2)

class VPNBot:
    def __init__(self):
        self.bot_token = config['bot']['token']
        self.admin_id = config['bot']['admin_id']
        self.db_path = config['database']['path']
        self.init_db()

    def init_db(self):
        conn = sqlite3.connect(self.db_path)
        cursor = conn.cursor()
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS users (
                user_id INTEGER PRIMARY KEY,
                username TEXT,
                first_name TEXT,
                last_name TEXT,
                balance REAL DEFAULT 0,
                is_active BOOLEAN DEFAULT FALSE,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            )
        ''')
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS payments (
                payment_id INTEGER PRIMARY KEY AUTOINCREMENT,
                user_id INTEGER,
                amount REAL,
                status TEXT,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY (user_id) REFERENCES users (user_id)
            )
        ''')
        conn.commit()
        conn.close()

    async def start(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        user = update.effective_user
        conn = sqlite3.connect(self.db_path)
        cursor = conn.cursor()
        
        cursor.execute('INSERT OR IGNORE INTO users (user_id, username, first_name, last_name) VALUES (?, ?, ?, ?)',
                      (user.id, user.username, user.first_name, user.last_name))
        conn.commit()
        conn.close()

        welcome_text = f"""
üëã –ü—Ä–∏–≤–µ—Ç, {user.first_name}!

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ VPN —Å–µ—Ä–≤–∏—Å! –ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å:
‚Ä¢ üõ°Ô∏è –ü–æ–ª—É—á–∏—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –¥–æ—Å—Ç—É–ø –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç
‚Ä¢ üåê –û–±–æ–π—Ç–∏ –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
‚Ä¢ üîí –ó–∞—â–∏—Ç–∏—Ç—å —Å–≤–æ—é –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å

–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—ã:
/buy - –ö—É–ø–∏—Ç—å VPN –¥–æ—Å—Ç—É–ø
/status - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å
/help - –ü–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å

–¶–µ–Ω–∞: {config['vpn']['price']} —Ä—É–±. –∑–∞ {config['vpn']['duration_days']} –¥–Ω–µ–π
        """
        
        await update.message.reply_text(welcome_text)

    async def buy_vpn(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        keyboard = [['üí∞ –û–ø–ª–∞—Ç–∏—Ç—å', '‚ùå –û—Ç–º–µ–Ω–∞']]
        reply_markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True)
        
        await update.message.reply_text(
            f"üí≥ –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è VPN –¥–æ—Å—Ç—É–ø–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–ø–ª–∞—Ç–∏—Ç—å {config['vpn']['price']} —Ä—É–±.\n\n"
            "–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è.",
            reply_markup=reply_markup
        )
        
        return SELECTING_ACTION

    async def handle_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        text = update.message.text
        
        if text == 'üí∞ –û–ø–ª–∞—Ç–∏—Ç—å':
            await update.message.reply_text(
                "‚ö†Ô∏è –ü–ª–∞—Ç–µ–∂–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /test_payment",
                reply_markup=ReplyKeyboardRemove()
            )
            return ConversationHandler.END
        
        elif text == '‚ùå –û—Ç–º–µ–Ω–∞':
            await update.message.reply_text(
                "‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.",
                reply_markup=ReplyKeyboardRemove()
            )
            return ConversationHandler.END
        
        return SELECTING_ACTION

    async def cancel(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        await update.message.reply_text(
            "‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.",
            reply_markup=ReplyKeyboardRemove()
        )
        return ConversationHandler.END

    async def test_payment(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        user = update.effective_user
        
        if user.id != self.admin_id:
            await update.message.reply_text("‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
            return

        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–æ–Ω—Ñ–∏–≥–∞
        client_name = f"client_{user.id}"
        os.system(f"/etc/openvpn/easy-rsa/easyrsa build-client-full {client_name} nopass")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–≥–æ –∫–æ–Ω—Ñ–∏–≥–∞
        client_config = f"""client
dev tun
proto udp
remote {config['vpn']['server_ip']} {config['vpn']['server_port']}
resolv-retry infinite
nobind
persist-key
persist-tun
remote-cert-tls server
cipher AES-256-CBC
verb 3
<ca>
{open('/etc/openvpn/easy-rsa/pki/ca.crt').read()}
</ca>
<cert>
{open(f'/etc/openvpn/easy-rsa/pki/issued/{client_name}.crt').read()}
</cert>
<key>
{open(f'/etc/openvpn/easy-rsa/pki/private/{client_name}.key').read()}
</key>
<tls-auth>
{open('/etc/openvpn/easy-rsa/ta.key').read()}
</tls-auth>
"""
        
        with open(f'/tmp/{client_name}.ovpn', 'w') as f:
            f.write(client_config)
        
        await update.message.reply_document(
            document=open(f'/tmp/{client_name}.ovpn', 'rb'),
            caption="‚úÖ –í–∞—à VPN –∫–æ–Ω—Ñ–∏–≥ –≥–æ—Ç–æ–≤! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –µ–≥–æ –≤ OpenVPN –∫–ª–∏–µ–Ω—Ç–µ."
        )

    async def help_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        help_text = """
ü§ñ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:

/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
/buy - –ö—É–ø–∏—Ç—å VPN –¥–æ—Å—Ç—É–ø
/status - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞: @your_support
        """
        await update.message.reply_text(help_text)

def main():
    bot = VPNBot()
    
    application = Application.builder().token(bot.bot_token).build()

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", bot.start))
    application.add_handler(CommandHandler("help", bot.help_command))
    application.add_handler(CommandHandler("test_payment", bot.test_payment))
    
    # Conversation handler –¥–ª—è –ø–æ–∫—É–ø–∫–∏
    conv_handler = ConversationHandler(
        entry_points=[CommandHandler('buy', bot.buy_vpn)],
        states={
            SELECTING_ACTION: [MessageHandler(filters.TEXT & ~filters.COMMAND, bot.handle_message)],
        },
        fallbacks=[CommandHandler('cancel', bot.cancel)],
    )
    
    application.add_handler(conv_handler)

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    application.run_polling()

if __name__ == '__main__':
    main()
EOF

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
echo "–°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ systemd..."
cat > /etc/systemd/system/vpnbot.service << EOF
[Unit]
Description=VPN Telegram Bot
After=network.target

[Service]
Type=simple
User=root
WorkingDirectory=/opt/vpnbot
Environment=PATH=/opt/vpnbot/venv/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
ExecStart=/opt/vpnbot/venv/bin/python /opt/vpnbot/vpn_bot.py
Restart=always
RestartSec=5

[Install]
WantedBy=multi-user.target
EOF

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤
chmod +x /opt/vpnbot/vpn_bot.py
chown -R root:root /opt/vpnbot

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞
echo "–ó–∞–ø—É—Å–∫ VPN –±–æ—Ç–∞..."
systemctl daemon-reload
systemctl enable vpnbot.service
systemctl start vpnbot.service

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞–º–∏
echo "–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞–º–∏..."
cat > /usr/local/bin/vpn-manage << 'EOF'
#!/bin/bash

case "$1" in
    add)
        if [ -z "$2" ]; then
            echo "Usage: vpn-manage add <client_name>"
            exit 1
        fi
        cd /etc/openvpn/easy-rsa/
        ./easyrsa build-client-full "$2" nopass
        echo "–ö–ª–∏–µ–Ω—Ç $2 –¥–æ–±–∞–≤–ª–µ–Ω"
        ;;
    revoke)
        if [ -z "$2" ]; then
            echo "Usage: vpn-manage revoke <client_name>"
            exit 1
        fi
        cd /etc/openvpn/easy-rsa/
        ./easyrsa revoke "$2"
        echo "–ö–ª–∏–µ–Ω—Ç $2 –æ—Ç–æ–∑–≤–∞–Ω"
        ;;
    list)
        ls /etc/openvpn/easy-rsa/pki/issued/ | grep -v server | sed 's/\.crt//g'
        ;;
    *)
        echo "Usage: vpn-manage {add|revoke|list} [client_name]"
        exit 1
        ;;
esac
EOF

chmod +x /usr/local/bin/vpn-manage

echo "=== –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! ==="
echo "–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ —Å–µ—Ä–≤–∏—Å: systemctl status vpnbot"
echo "–î–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞–º–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: vpn-manage {add|revoke|list}"
echo "–î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É –∫–æ–º–∞–Ω–¥—É: /test_payment"
